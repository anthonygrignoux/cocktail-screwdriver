// Mixins and other functionnal tools
// It should not directly compile any css unless called
// It should not be specific to the project

// Originally from https://github.com/skymaiden/skymaiden-sass
// http://skymaiden.mit-license.org/

@mixin breakpoint($min-width, $max-width: false, $touch: false, $nested: false) {
  // Pour les navigateurs modernes (ie9+) :
  @if $media-queries {
    @media screen and (min-width: $min-width) {
      // s'il y a un max-width on l'ajoute Ã  la media query avant d'afficher le contenu
      @if $max-width {
        @media (max-width: $max-width) {
          @content;
        }
      } @else {
        @content;
      }
    }
    @if $touch and $nested {
      .touch & {
        @content;
      }
    } @else if $touch and not $nested {
      .touch {
        @content;
      }
    }
  } // Pour les navigateurs pourris :
  // si le min-width et max-width ne sont pas plus grands que $desktop
  @else if $min-width <= $desktop and (not $max-width or $max-width and $max-width >= $desktop) {
    @content;
  }
}

// ------------------------------------------- //
// FUNCTION: rem();
// DESCRIPTION: font size in REM
// ------------------------------------------- //

@function rem($target, $context: 16) {
  @return ($target/$context) * 1rem;
}

// ------------------------------------------------------------------------------- //
// MIXIN: rem-size();
//
// VERSION: 1.2.0
// DESCRIPTION: add "font-size" in REM for all recent browsers and in PX for IE7/8
// ------------------------------------------------------------------------------- //

@mixin rem-size($target, $context: 16) {
  @if $oldie == false {
    font-size: rem($target, $context);
  } @else {
    font-size: $target * 1px;
  }
}

// Originally from https://github.com/skymaiden/skymaiden-sass
// http://skymaiden.mit-license.org/

// Calculate font size in ems
@function sky-em($target, $context: 16) {
    @return ($target / $context) * 1em;
}

// ------------------------------------------------------------------------------- //
// COMMON AND RECURRING STYLES
// ------------------------------------------------------------------------------- //

// "..." on text-overflow
@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
  @if $oldie {
    .ie7 & {
      zoom: 1;
    }
  }
}

// No bullet, no style lists
@mixin list-unstyled() {
  list-style: none;
  margin: 0;
  padding: 0;
}

// css triangles
// https://gist.github.com/dustinhorton/82a89fcff9dea1251333#file-sass-triangle-mixin-1-sass
@mixin triangle($dir, $size, $color) {
  border: $size transparent solid;
  @if ($dir == "top" or $dir == "up") {
    border-bottom-color: $color;
  }
  @else if ($dir == "right" or $dir == "after") {
    border-left-color: $color;
  }
  @else if ($dir == "bottom" or $dir == "down") {
    border-top-color: $color;
  }
  @else if ($dir == "left" or $dir == "before") {
    border-right-color: $color;
  }
}
